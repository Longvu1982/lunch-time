/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
  env: {
    browser: true,
    node: true,
    // "jest": true,
    es2021: true
  },
  extends: [
    // "airbnb",
    // "airbnb-typescript",
    // "airbnb/hooks",
    "prettier",
    "plugin:prettier/recommended",
    // "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:eslint-plugin-react/recommended"
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true
    },
    ecmaVersion: 6, // latest
    // "tsconfigRootDir": "ClientApp",
    // "project": [
    //     "./tsconfig.json",
    //     "./tsconfig.eslint.json"
    // ],
    sourceType: "module"
  },
  plugins: [
    "react",
    "eslint-plugin-prefer-arrow",
    "eslint-plugin-jsdoc",
    "eslint-plugin-import",
    "eslint-plugin-react",
    "@typescript-eslint",
    "simple-import-sort",
    "import"
    // "eslint-plugin-jest",
  ],
  settings: {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    }
    // "import/resolver": {
    //     "typescript": {}
    // }
  },
  rules: {
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "off",
    "@typescript-eslint/no-unused-vars": [
      "off",
      {
        vars: "all",
        args: "none"
      }
    ],
    "@typescript-eslint/semi": ["error"],
    "arrow-parens": [
      "off",
      "as-needed",
      {
        requireForBlockBody: true
      }
    ],
    "class-methods-use-this": "off",
    "comma-dangle": [
      "error",
      {
        arrays: "never",
        objects: "never",
        imports: "never",
        exports: "never",
        functions: "never"
      }
    ],
    "consistent-return": [
      "off",
      {
        treatUndefinedAsUnspecified: false
      }
    ],
    "implicit-arrow-linebreak": "off",
    "simple-import-sort/imports": [
      "error",
      {
        groups: [
          [
            "^react",
            "^api",
            // Packages.
            // Things that start with a letter (or digit or underscore), or `@` followed by a letter.
            "^@?\\w",
            "^models",
            "^reduxs",
            "^utility",
            "^(@|components)(/.*|$)",
            "^\\.\\.(?!/?$)', '^\\.\\./?$",
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$",
            // Node.js builtins prefixed with `node:`.
            "^node:",
            // Absolute imports and other imports such as Vue-style `@/foo`.
            // Anything not matched in another group.
            "^",
            // Relative imports.
            // Anything that starts with a dot.
            "^\\.",
            "^.+\\.?((sa|sc|c)ss)$",
            "^.+\\.?(css)$"
          ],
          // Side effect imports.
          ["^\\u0000"]
        ]
      }
    ],
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/extensions": ["off", "never"],
    "import/no-unresolved": [
      "off",
      {
        ignore: ["^@", "./"]
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        devDependencies: true,
        optionalDependencies: true,
        peerDependencies: true,
        bundledDependencies: true
      }
    ],
    "import/prefer-default-export": "off",
    "jsx-a11y/no-noninteractive-tabindex": [
      "off",
      {
        tags: [],
        roles: ["tabpanel"]
      }
    ],
    "linebreak-style": ["off", "windows"],
    "max-len": [
      "warn",
      {
        code: 100
      }
    ],
    "no-undef": "off",
    "no-unused-vars": "off",
    "operator-linebreak": [
      "error",
      "after",
      {
        overrides: {
          "?": "before",
          ":": "before"
        }
      }
    ],
    quotes: [
      "error",
      "double",
      {
        allowTemplateLiterals: true,
        avoidEscape: true
      }
    ],
    "react/destructuring-assignment": "off",
    "react/display-name": "off",
    "react/jsx-filename-extension": "off",
    "react/jsx-no-useless-fragment": "off",
    "react/no-children-prop": "off",
    "react/no-unstable-nested-components": [
      "off",
      {
        allowAsProps: true
      }
    ],
    "react/no-unused-prop-types": "off",
    "react/require-default-props": [
      "off",
      {
        forbidDefaultForRequired: true,
        classes: "defaultProps",
        functions: "defaultProps"
      }
    ],
    "react/prop-types": "off",
    semi: ["off", "always"]
  }
};
